services:
  market:
    container_name: market
    build:
      context: ./Market
      dockerfile: Dockerfile
    command: "uvicorn --factory main:create_app --host=0.0.0.0 --reload --port 8000"
    volumes:
      - ./Market/app:/app
    ports:
      - "${MARKET_PORT}:8000"
    env_file:
      - ".env"
    networks:
      - backend
    restart:
      always
    depends_on:
      - postgres_database
      - redis_database
      - mongodb_database

  postgres_database:
    container_name: postgres_database
    image: postgres:17.2
    environment:
      POSTGRES_DB: "${POSTGRES_DB_NAME}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - "${POSTGRES_DB_PORT}:5432"
    volumes:
      - .postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - backend
    
  redis_database:
    image: redis:alpine3.21
    container_name: redis_database
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
       - .redis:/data
    restart: always
    networks:
      - backend

  mongodb_database:
    container_name: mongodb_database
    image: mongo:latest
    environment:
      MONGODB_DB_NAME: ${MONGODB_DB_NAME}
      MONGODB_USERNAME: ${MONGODB_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - .mongodb:/data/db
    restart: always
    networks:
      - backend
  
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - backend
    restart: always

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    networks:
      - backend
    restart: always
    depends_on:
      - prometheus
  
networks: 
  backend:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:

