services:
  market:
    container_name: market
    build:
      context: ./Market
      dockerfile: Dockerfile
    command: "uvicorn --factory main:create_app --host=0.0.0.0 --reload --port 8000"
    volumes:
      - ./Market/app:/app
    ports:
      - "${MARKET_PORT}:8000"
    env_file:
      - ".env"
    networks:
      - backend
    restart:
      always
    depends_on:
      - postgres_database
      - redis_database

  postgres_database:
    container_name: postgres_database
    image: postgres:17.2
    environment:
      POSTGRES_DB: "${POSTGRES_DB_NAME}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - "${POSTGRES_DB_PORT}:5432"
    volumes:
      - .postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - backend
    
  redis_database:
    image: redis:alpine3.21
    container_name: redis_database
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
       - .redis:/data
    restart: always
    networks:
      - backend

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - backend
    depends_on:
      - market

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - backend
    depends_on:
      - prometheus
    volumes:
      - ./grafana-data:/var/lib/grafana

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - backend
    restart: always

  locust:
    image: locustio/locust
    container_name: locust
    volumes:
      - ./Market/app/tests:/mnt/locust
    command: -f /mnt/locust/test_locust.py --host http://market:8000
    ports:
      - "8089:8089"
    networks:
      - backend
    depends_on:
      - market

networks: 
  backend:
    driver: bridge

